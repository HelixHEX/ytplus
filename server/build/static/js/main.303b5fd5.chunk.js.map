{"version":3,"sources":["Components/Nav.js","Components/MobileNav.js","utils/config.js","Components/Song.js","Components/Songs.js","Pages/Downloads.js","Pages/Search.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","currentPage","history","useHistory","handleChange","url","push","useColorMode","colorMode","toggleColorMode","display","bg","pos","height","overflowY","w","h","margin","flexDir","rounded","mt","alignSelf","onClick","aria-label","icon","Sun","Moon","color","_hover","cursor","textAlign","fontSize","MobileNav","useDisclosure","isOpen","onOpen","onClose","placement","size","right","baseURL","Song","data","mb","add","remove","index","useState","loading","setLoading","toast","useToast","reomveSong","a","alert","format","axios","post","title","then","res","success","description","status","duration","isClosable","error","console","log","addSong","image","thumbnail","timestamp","align","pl","fallbackSrc","src","alt","isTruncated","ml","fontWeight","mr","justifyContent","as","X","Download","isIndeterminate","Songs","songs","map","Downloads","setSongs","videos","setVideos","newSongs","splice","useEffect","mp3","mp4","main","minH","Search","track","setTrack","handleSearch","e","preventDefault","length","results","onSubmit","border","value","onChange","target","placeholder","App","exact","path","to","render","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","extendTheme","config","initialColorMode","useSystemColorMode","styles","global","body","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.303b5fd5.chunk.js","sourcesContent":["import React from 'react'\n\nimport {\n    Flex,\n    Text,\n    IconButton,\n    useColorMode\n} from '@chakra-ui/react'\n\nimport {MoonIcon, SunIcon} from '@chakra-ui/icons'\n\nimport { useHistory } from 'react-router-dom'\n\nconst Nav = ({ currentPage }) => {\n    const history = useHistory()\n    const handleChange = (url) => {\n        history.push(url)\n    }\n    const { colorMode, toggleColorMode } = useColorMode()\n\n    return (\n        <>\n            <Flex display={['none', 'none', 'none', 'flex', 'flex']} bg={colorMode === 'light' ? 'white' : '#0e1117'} pos='fixed' height='100vh' overflowY='auto' w={200}>\n                <Flex h='100%' margin='auto' flexDir='column'>\n                    <IconButton bg={colorMode === 'light' ? 'gray.200' : 'gray.800'}  rounded={10} mt={25} alignSelf='center' w={70} onClick={toggleColorMode} aria-label=\"Toggle Dark Mode\" icon={colorMode === 'light' ? <SunIcon/> : <MoonIcon />} />\n                    <Flex mt={75} flexDir='column'>\n                        <Text color={currentPage === 'search' ? 'purple.600' : colorMode === 'light' ? 'black' : 'white' } onClick={() => handleChange('/search')} _hover={{ cursor: 'pointer', color: 'purple.600' }} textAlign='center' fontSize={30}>Search</Text>\n                        <Text color={currentPage === 'downloads' ? 'purple.600' : colorMode === 'light' ? 'black' : 'white'} onClick={() => handleChange('/download')} _hover={{ cursor: 'pointer', color: 'purple.600' }} fontSize={30} mt={10}>Downloads</Text>\n                    </Flex>\n                </Flex>\n            </Flex>\n        </>\n    )\n}\n\nexport default Nav","import React from 'react'\n\nimport { Menu } from 'react-feather'\n\nimport {\n    Flex,\n    Text,\n    IconButton,\n    useColorMode,\n    Drawer,\n    DrawerBody,\n    DrawerOverlay,\n    DrawerContent,\n    DrawerCloseButton,\n    useDisclosure\n} from '@chakra-ui/react'\n\nimport { useHistory } from 'react-router-dom'\n\nconst MobileNav = ({ currentPage }) => {\n    const history = useHistory()\n    const handleChange = (url) => {\n        history.push(url)\n    }\n    const { colorMode, toggleColorMode } = useColorMode()\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n    return (\n        <>\n            <Drawer\n                isOpen={isOpen}\n                placement=\"right\"\n                onClose={onClose}\n                size={'lg'}\n            >\n                <DrawerOverlay />\n                <DrawerContent bg={colorMode === 'light' ? 'purple.500' : 'purple.900'}>\n                    <DrawerCloseButton color='white' />\n                    <DrawerBody>\n                        <Flex mt={75} flexDir='column'>\n                            <Text textAlign='center' color={'white'} onClick={toggleColorMode} _hover={{ cursor: 'pointer', color: colorMode === 'light' ? 'purple.900' : 'purple.600' }} fontSize={30}>{colorMode === 'light' ? 'Dark Mode' : 'Light Mode'}</Text>\n                            <Text mt={50} color={currentPage === 'search' ? 'black' : 'white'} onClick={() => handleChange('/search')} _hover={{ cursor: 'pointer', color: colorMode === 'light' ? 'black' : 'purple.600' }} textAlign='center' fontSize={30}>Search</Text>\n                            <Text textAlign='center' color={currentPage === 'downloads' ? 'black' : 'white'} onClick={() => handleChange('/download')} _hover={{ cursor: 'pointer', color: colorMode === 'light' ? 'black' : 'purple.600' }} fontSize={30} mt={5}>Downloads</Text>\n                        </Flex>\n                    </DrawerBody>\n                </DrawerContent>\n            </Drawer>\n            <Flex display={['flex', 'flex', 'flex', 'none', 'none']} mt='3%' pos='absolute' right={25}>\n                <IconButton onClick={onOpen} bg={colorMode === 'light' ? 'gray.300' : 'gray.800'} rounded={5} mt={25} w={50} aria-label=\"Open Menu\" icon={<Menu />} />\n            </Flex>\n        </>\n    )\n}\n\nexport default MobileNav","// export const baseURL = !process.env.NODE_ENV || process.env.NODE_ENV === 'development' ? `http://localhost:5000/api/v1/` : '/api/v1/'\nexport const baseURL = 'http://localhost:5009/api/v1/'","import React, { useState } from \"react\"\n\nimport {\n    Text,\n    Flex,\n    Image,\n    Icon,\n    useToast,\n    useColorMode,\n    CircularProgress,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalFooter,\n    ModalBody,\n    ModalCloseButton,\n    useDisclosure,\n    Button\n} from '@chakra-ui/react'\n\nimport { Download, X } from 'react-feather';\n\nimport { baseURL } from \"../utils/config\";\n\nimport axios from \"axios\";\n\nconst Song = ({ data, mb, add, remove, index }) => {\n    const [loading, setLoading] = useState(false)\n\n    const toast = useToast()\n    const { colorMode } = useColorMode()\n\n    const { isOpen, onOpen, onClose } = useDisclosure()\n\n\n    const reomveSong = async () => {\n        alert(data.format)\n        try {\n            setLoading(true)\n            await axios.post(baseURL + 'song/remove', {\n                url: data.url,\n                title: data.title,\n                format: data.format\n            }).then(res => {\n                setLoading(false)\n                if (res.data.success) {\n                    remove(index)\n                    toast({\n                        title: \"Success\",\n                        description: 'Song reomved',\n                        status: \"success\",\n                        duration: 4000,\n                        isClosable: true,\n                    })\n                } else {\n                    toast({\n                        title: \"Uh Oh :(\",\n                        description: res.data.error,\n                        status: \"error\",\n                        duration: 4000,\n                        isClosable: true,\n                    })\n                }\n            })\n        } catch (e) {\n            console.log(e)\n            toast({\n                title: \"Uh Oh :(\",\n                description: 'An error has occurred',\n                status: \"error\",\n                duration: 4000,\n                isClosable: true,\n            })\n        }\n    }\n\n    const addSong = async (format) => {\n        onClose()\n        try {\n            setLoading(true)\n            await axios.post(baseURL + 'download/song', {\n                url: data.url,\n                image: data.thumbnail,\n                title: data.title,\n                duration: data.duration.timestamp,\n                format\n            }).then(res => {\n                setLoading(false)\n                if (res.data.success) {\n                    toast({\n                        title: \"Success\",\n                        description: 'Downloaded',\n                        status: \"success\",\n                        duration: 4000,\n                        isClosable: true,\n                    })\n                    add(index)\n                } else {\n\n                    toast({\n                        title: \"Uh Oh :(\",\n                        description: res.data.error,\n                        status: \"error\",\n                        duration: 4000,\n                        isClosable: true,\n                    })\n                }\n            })\n        } catch (e) {\n\n            console.log(e)\n            toast({\n                title: \"Uh Oh :(\",\n                description: 'An error has occurred',\n                status: \"error\",\n                duration: 4000,\n                isClosable: true,\n            })\n        }\n    }\n    return (\n        <>\n            <Flex _hover={{ bg: colorMode === 'light' ? 'gray.300' : 'gray.800', color: colorMode === 'light' ? 'black' : 'white' }} rounded={2} align='center' h={50} pl={5} bg={colorMode === 'light' ? 'white' : 'gray.700'} mb={mb}>\n                <Image fallbackSrc=\"https://via.placeholder.com/150\" src={data.image} rounded={5} w={39} h={39} alt={data.title} />\n                <Text isTruncated w='100%' ml={2} fontWeight='300'>{data.title}</Text>\n                {/* <Text ml={[2, 10]}>{min}:{sec < 10 ? '0' + sec : sec}</Text> */}\n                {data.format\n                    ? <Text ml={[2, 10]}>{data.format}</Text>\n                    : null}\n                <Text ml={[2, 10]}>{data.duration.timestamp}</Text>\n                <Flex mr={[2, 10]} w='100%' color='purple.500' justifyContent='flex-end' >\n                    <Flex display={loading ? 'none' : 'flex'}>\n                        <Icon _hover={{ cursor: 'pointer' }} onClick={() => reomveSong()} display={data.remove ? 'flex' : 'none'} w={30} h={30} as={X} />\n                        <Icon _hover={{ cursor: 'pointer' }} onClick={() => onOpen()} display={data.remove ? 'none' : 'flex'} w={30} h={30} as={Download} />\n                    </Flex>\n                    <CircularProgress display={loading ? 'flex' : 'none'} ml={5} isIndeterminate size='30px' color='purple.600' />\n                </Flex>\n            </Flex>\n\n            {/* type */}\n            <Modal isOpen={isOpen} onClose={onClose}>\n                <ModalOverlay />\n                <ModalContent bg={colorMode === 'light' ? 'purple.600' : 'purple.900'}>\n                    <ModalHeader>Select Type </ModalHeader>\n                    <ModalCloseButton />\n                    <ModalBody >\n                        <Flex justifyContent='space-evenly'>\n                            <Button onClick={() => addSong('mp3')}>MP3</Button>\n                            <Button onClick={() => addSong('mp4')}>MP4</Button>\n                        </Flex>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button _hover={{ bg: 'red.500' }} bg='none' mr={3} onClick={onClose}>\n                            Close\n                        </Button>\n                    </ModalFooter>\n                </ModalContent>\n            </Modal>\n        </>\n    )\n}\n\nexport default Song","import React from \"react\";\n\nimport Song from \"./Song\";\n\nimport { Flex } from \"@chakra-ui/react\";\nconst Songs = ({ mt, add, remove, songs }) => {\n  return (\n    <>\n      <Flex mt={mt} flexDir=\"column\">\n        {songs ? (\n          <>\n            {songs.map((data, index) => (\n              <div key={index}>\n                <Song\n                  index={index}\n                  key={index}\n                  add={add}\n                  remove={remove}\n                  mb={\"1%\"}\n                  data={data}\n                />\n              </div>\n            ))}\n          </>\n        ) : null}\n      </Flex>\n    </>\n  );\n};\n\nexport default Songs;\n","import React, { useState, useEffect } from 'react'\n\nimport Nav from '../Components/Nav'\nimport MobileNav from '../Components/MobileNav'\nimport Songs from '../Components/Songs'\n\nimport {\n    Flex,\n    Text,\n    CircularProgress,\n    useToast,\n    useColorMode\n} from '@chakra-ui/react'\nimport axios from 'axios'\nimport { baseURL } from '../utils/config'\n\nconst Downloads = () => {\n    const [loading, setLoading] = useState(false)\n    const [songs, setSongs] = useState([])\n    const [videos, setVideos] = useState([])\n\n    const toast = useToast()\n    const { colorMode } = useColorMode()\n\n    const remove = (index) => {\n        let newSongs = [...songs]\n        newSongs.splice(index, 1)\n        setSongs(newSongs)\n    }\n\n    useEffect(() => {\n        const main = async () => {\n            try {\n                setLoading(true)\n                await axios.post(baseURL + 'download').then(res => {\n                    setLoading(false)\n                    if (res.data.success) {\n                        setSongs(res.data.mp3)\n                        setVideos(res.data.mp4)\n                    } else {\n                        toast({\n                            title: \"Uh Oh :(\",\n                            description: res.data.error,\n                            status: \"error\",\n                            duration: 4000,\n                            isClosable: true,\n                        })\n                    }\n                })\n            } catch (e) {\n                console.log(e)\n                toast({\n                    title: \"Uh Oh :(\",\n                    description: 'An error has occurred',\n                    status: \"error\",\n                    duration: 4000,\n                    isClosable: true,\n                })\n            }\n        }\n        main()\n    }, [toast])\n    return (\n        <>\n            <Flex bg={colorMode === 'light' ? '#E2E8F0' : 'gray.900'} minH='100vh' h='auto' flexDir='column'>\n                <Nav currentPage={'downloads'} />\n                <MobileNav currentPage={'downloads'}/>\n                <Flex mr={[0, 25]} ml={[0, 25, 25, 220]} flexDir='column'>\n                    <Text mt='5%' fontSize={40} fontWeight='200'>Downloaded</Text>\n                    {loading ? <CircularProgress mt='2%' alignSelf='center' isIndeterminate color=\"purple.600\" /> : null}\n                    {songs\n                        ? <Songs remove={remove} songs={songs} mt={'5%'}  />\n                        : null\n                    }\n                    {videos\n                        ? <Songs remove={remove} songs={videos} mt={'5%'}  />\n                        : null\n                    }\n                </Flex>\n            </Flex>\n        </>\n    )\n}\n\nexport default Downloads","import React, { useState } from 'react'\n\nimport Nav from '../Components/Nav'\nimport MobileNav from '../Components/MobileNav'\nimport Songs from '../Components/Songs'\n\nimport {\n    Flex,\n    Text,\n    Input,\n    useToast,\n    CircularProgress,\n    useColorMode\n} from '@chakra-ui/react'\n\nimport axios from 'axios'\nimport { baseURL } from '../utils/config';\n\n\nconst Search = () => {\n    const [track, setTrack] = useState('')\n\n    const [songs, setSongs] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    const toast = useToast()\n    const { colorMode } = useColorMode()\n\n    const add = (index) => {\n        let newSongs = [...songs]\n        newSongs[index].remove = true\n        setSongs(newSongs)\n    }\n\n    const remove = (index) => {\n        let newSongs = [...songs]\n        newSongs[index].remove = false\n        setSongs(newSongs)\n    }\n\n    const handleSearch = async (e) => {\n        e.preventDefault()\n        if (track.length > 0) {\n            try {\n                setLoading(true)\n                setSongs([])\n                axios.post(baseURL + 'song/search', {\n                    track\n                }).then(res => {\n                    setLoading(false)\n                    if (res.data.success) {\n                        setSongs(res.data.results)\n                    } else {\n                        toast({\n                            title: \"Uh Oh :(\",\n                            description: res.data.error,\n                            status: \"error\",\n                            duration: 4000,\n                            isClosable: true,\n                        })\n                    }\n                })\n            } catch (e) {\n                toast({\n                    title: \"Uh Oh :(\",\n                    description: \"An error has occurred\",\n                    status: \"error\",\n                    duration: 4000,\n                    isClosable: true,\n                })\n            }\n        }\n    }\n    return (\n        <>\n            <Flex  bg={colorMode === 'light' ? '#E2E8F0' : 'gray.900'} minH='100vh' h='auto' flexDir='column'>\n                <Nav currentPage={'search'} />\n                <MobileNav currentPage={'search'}/>\n                <Flex  mr={[0, 25]} ml={[0, 25, 25, 220]} flexDir='column'>\n                    <Text mt='5%' fontSize={40} fontWeight='200'>Search</Text>\n                    <form onSubmit={handleSearch}>\n                        <Input border='none' value={track} onChange={e => setTrack(e.target.value)} placeholder='Search songs' mt='2%' bg={colorMode === 'light' ? 'purple.600' : \"purple.900\"} color='white' />\n                    </form>\n                    {loading ? <CircularProgress mt='2%' alignSelf='center' isIndeterminate color='purple.600' /> : null}\n                    {songs.length > 1\n                        ? <Songs remove={remove} add={add} songs={songs} mt={'5%'} />\n                        : null}\n                </Flex>\n            </Flex>\n        </>\n    )\n}\n\nexport default Search","import React from 'react'\n\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\n\n//Pages \nimport Downloads from './Pages/Downloads'\nimport Search from './Pages/Search'\n\nconst App = () => {\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Redirect to=\"/search\" />\n          </Route>\n          <Route exact path=\"/download\" render={(props) => <Downloads {...props} />} />\n          <Route exact path=\"/search\" render={(props) => <Search {...props} />} />\n        </Switch>\n      </Router>\n    </>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport {ChakraProvider, extendTheme} from '@chakra-ui/react'\n\nconst config = {\n  initialColorMode: \"light\",\n  useSystemColorMode: false,\n}\n\nconst theme = extendTheme({\n  config,\n  styles: {\n    global: {\n      body: {\n        bg: \"#E2E8F0\",\n      },\n    },\n  },\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChakraProvider theme={theme}>\n      <App />\n    </ChakraProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}